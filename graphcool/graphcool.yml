

# Data Schemas
types:
  - enums.graphql
  - types.graphql

# Graphcool functions and resolvers
functions:
  signup:
    type: resolver
    schema: src/auth/registration/signup.graphql
    handler:
      code: src/auth/registration/signup.js

  authenticate:
    type: resolver
    schema: src/auth/authenticate/authenticate.graphql
    handler:
      code: src/auth/authenticate/authenticate.js

  loggedInUser:
    type: resolver
    schema: src/auth/login/loggedInUser.graphql
    handler:
      code: src/auth/login/loggedInUser.js


# Model/Relation permissions are used to limit the API access
# To take the burden of thinking about those while development, we
# preconfigured the wildcard ("*") permission that allows everything
# Read more here:
# https://www.graph.cool/docs/reference/auth/authorization/overview-iegoo0heez
permissions:
  - operation: "*"


# Your root tokens used for functions to get full access to the API
# Read more here:
# https://www.graph.cool/docs/reference/auth/authentication/authentication-tokens-eip7ahqu5o
# rootTokens:
#   - mytoken


